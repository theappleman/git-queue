From: Daniel Cordero <theappleman@gmail.com>

Let "git add -p" stage hunk on empty string

When I use "git add -p", I usually need to add most of it as-is, and
edit or reject a few. To make this faster, take a blank string (press
enter) to stage the hunk or mode change.
diff --git c/git-add--interactive.perl w/git-add--interactive.perl
index ca60356..53e818b 100755
--- c/git-add--interactive.perl
+++ w/git-add--interactive.perl
@@ -891,9 +891,9 @@ sub patch_update_file {
 		while (1) {
 			print @{$mode->{DISPLAY}};
 			print colored $prompt_color,
-				"Stage mode change [y/n/a/d/?]? ";
+				"Stage mode change [Y/n/a/d/?]? ";
 			my $line = <STDIN>;
-			if ($line =~ /^y/i) {
+			if ($line =~ /^y/i or $line =~ /^$/) {
 				$mode->{USE} = 1;
 				last;
 			}
@@ -964,10 +964,10 @@ sub patch_update_file {
 		for (@{$hunk[$ix]{DISPLAY}}) {
 			print;
 		}
-		print colored $prompt_color, "Stage this hunk [y/n/a/d$other/?]? ";
+		print colored $prompt_color, "Stage this hunk [Y/n/a/d$other/?]? ";
 		my $line = <STDIN>;
 		if ($line) {
-			if ($line =~ /^y/i) {
+			if ($line =~ /^y/i or $line =~ /^$/) {
 				$hunk[$ix]{USE} = 1;
 			}
 			elsif ($line =~ /^n/i) {
